@model BSMS.bsms.localhost.CATEGORY

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_TLayout.cshtml";
}

<div class="container">
    <div class="row">
        <div class="col-lg-8 col-md-8 col-sm-12 col-sx-12">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>CATEGORY</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.NAME, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NAME, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NAME, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DESCRIPTION, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DESCRIPTION, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DESCRIPTION, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.REFERENCE_KEY, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.REFERENCE_KEY, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.REFERENCE_KEY, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
        </div>
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
        </div>
</div>


@if (!String.IsNullOrEmpty(ViewBag.Message))
{
    <script>

        var message = '@ViewBag.Message';
        swal({
            title: 'Walting',
            text: 'BSMS is ',
            timer: 3000,
            type: 'error',
            background: '#fff url(http://www.planwallpaper.com/static/images/518151-backgrounds_W3qVPu2.jpg)'
        }).then(
        function () { },
// handling the promise rejection
            function (dismiss) {
                swal(
              'Information Message',
                message,
              'info'
            )
               window.location = '@Url.Action("Index","Category")';
            }
        )

    </script>
}


@if (!String.IsNullOrEmpty(ViewBag.ErrorMessage))
{
    <script>
        var message = '@ViewBag.ErrorMessage';
        swal({
            title: 'Error Message',
            text: message,
            type:'error',
            background: '#fff url(http://www.planwallpaper.com/static/images/518151-backgrounds_W3qVPu2.jpg)'
        })
    </script>
}